version: '3.8'

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ui-ae-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - graphiti-network
    command: serve
    deploy:
      resources:
        limits:
          memory: 8G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5

  neo4j:
    image: neo4j:5.26.0
    container_name: ui-ae-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - graphiti-network

  graphiti-service:
    build:
      context: .
      dockerfile: Dockerfile.graphiti
    container_name: ui-ae-graphiti
    ports:
      - "8100:8100"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_LLM_MODEL=${OLLAMA_LLM_MODEL:-gemma3n:e2b}
      - OLLAMA_EMBEDDING_MODEL=${OLLAMA_EMBEDDING_MODEL:-nomic-embed-text}
      - GRAPHITI_SERVICE_PORT=8100
    depends_on:
      - neo4j
      - ollama
    networks:
      - graphiti-network
    restart: unless-stopped

networks:
  graphiti-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  ollama_data: